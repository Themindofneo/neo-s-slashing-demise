local Players = game:GetService("Players")
local player = Players.LocalPlayer

local function stopAllAnimations()
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:FindFirstChildWhichIsA("Humanoid")

	if humanoid then
		for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
			track:Stop(0.2) -- 0.2 is the fade-out time
		end
	end
end
-- Call the function to stop all animations
stopAllAnimations()
wait(0.2)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://183294396"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(1)

task.delay(1.3, function()
    animationTrack:Stop(fadeTime)
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://180416148"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.4
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 1.3
animationTrack:AdjustSpeed(0)

task.delay(1.3, function()
    animationTrack:Stop(fadeTime)
end)
local c = game.Players.LocalPlayer.Character
local hum = c.Humanoid

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://180436334"
local track = hum:LoadAnimation(animation)
track:Play(1, 5, 1)
track:AdjustSpeed(0.01)

local hrp = c.HumanoidRootPart
local cfr = hrp.CFrame

local start = tick()
while tick() - start < 1.3 do
    task.wait()
    hrp.CFrame = cfr * CFrame.Angles(math.rad(-45.5), 0, 0) * CFrame.new(0, 0, -2.5)
    hrp.Velocity = Vector3.zero
    hrp.RotVelocity = Vector3.zero
end

track:Stop()
Wait(0.1)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local leapDistance = 200 -- Distance to leap in studs
local leapHeight = 15 -- Adjust this value to control how high the player jumps

local function leapForward()
    -- Create a BodyVelocity to apply the leap
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = rootPart.CFrame.lookVector * leapDistance + Vector3.new(0, leapHeight, 0)
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- Adjust as needed
    bodyVelocity.P = 5000 -- Adjust the power of the force
    bodyVelocity.Parent = rootPart

    -- Remove the BodyVelocity after a short time to prevent continuous motion
    game:GetService("Debris"):AddItem(bodyVelocity, 0.2)
end
leapForward()

-- animation 



local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://85835312"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(1)

task.delay(0.8, function()
    animationTrack:Stop(fadeTime)
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://97170520"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0.3
animationTrack:AdjustSpeed(0)

task.delay(0.8, function()
    animationTrack:Stop(fadeTime)
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://327324663"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(1)

task.delay(0.8, function()
    animationTrack:Stop(fadeTime)
end)


-- camera shake
local Intensity = 0.5
local ShakeLength = 4
local FadeLength = 0.8

-- don't change anything here unless you know
local rn = Random.new()
local int = Instance.new("NumberValue")
int.Value = Intensity
local b
b = game:GetService("RunService").Heartbeat:Connect(function()
game.Players.LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(rn:NextNumber(-int.Value, int.Value),rn:NextNumber(-int.Value, int.Value),rn:NextNumber(-int.Value, int.Value))
end)
task.wait(ShakeLeangth)
local p
p = game:GetService("TweenService"):Create(int,TweenInfo.new(FadeLength, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Value = 0})
p:Play()
p.Completed:Wait()
b:Disconnect()
local player = game.Players.LocalPlayer

local function freezeAndRestoreSpeed()
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")

	-- Freeze
	humanoid.WalkSpeed = 0

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://181526230"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.5
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(1)

task.delay(0.5, function()
    animationTrack:Stop(fadeTime)
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://287325678"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.6
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(1)

task.delay(1, function()
    animationTrack:Stop(fadeTime)
end)
Wait(1.6)
	-- Wait 5 seconds

	-- Restore
	humanoid.WalkSpeed = 16
end

if player.Character then
	freezeAndRestoreSpeed()
end

player.CharacterAdded:Connect(function()
	freezeAndRestoreSpeed()
end)